version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ${DATABASE_NAME:-beta_marketplace}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:7.3.0
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "29092:29092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      retry: '{"retries": 8, "initialRetryTime": 3000}'

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka

  auth-service:
    build: ../marketplace-auth
    restart: always
    depends_on:
      - postgres
      - redis
      - kafka
    command: ["./wait-for-kafka.sh", "kafka", "29092", "node", "dist/main"]
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/${DATABASE_NAME:-beta_marketplace}
      KAFKA_BROKERS: kafka:29092
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3000

  order-service:
    build: ../marketplace-order
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/${DATABASE_NAME:-beta_marketplace}
      KAFKA_BROKERS: kafka:29092
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3001

  product-service:
    build: ../marketplace-product
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - "3002:3002"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/${DATABASE_NAME:-beta_marketplace}
      KAFKA_BROKERS: kafka:29092
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3002

  scheduler-service:
    build: ../marketplace-scheduler
    depends_on:
      - postgres
      - kafka
    ports:
      - "3003:3003"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/${DATABASE_NAME:-beta_marketplace}
      KAFKA_BROKERS: kafka:29092
      REDIS_URL: redis://redis:6379
      PORT: 3003

  user-service:
    build: ../marketplace-user
    depends_on:
      - postgres
      - kafka
    command: ["./wait-for-kafka.sh", "kafka", "29092", "node", "dist/main"]
    ports:
      - "3004:3004"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/${DATABASE_NAME:-beta_marketplace}
      KAFKA_BROKERS: kafka:29092
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3004

volumes:
  postgres_data:
  redis_data: